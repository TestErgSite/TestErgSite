{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nexport const useDetectOutsideClick = (el, initialState) => {\n  _s();\n\n  const [isActive, setIsActive] = useState(initialState);\n  useEffect(() => {\n    const pageClickEvent = e => {\n      // If the active element exists and is clicked outside of\n      if (el.current !== null && !el.current.contains(e.target)) {\n        setIsActive(!isActive);\n      }\n    };\n\n    if (el.current.children) {// setIsActive(!isActive);   \n    } // If the item is active (ie open) then listen for clicks\n\n\n    if (isActive) {\n      window.addEventListener('click', pageClickEvent);\n    }\n\n    return () => {\n      window.removeEventListener('click', pageClickEvent);\n    };\n  }, [isActive, el]);\n  return [isActive, setIsActive];\n};\n\n_s(useDetectOutsideClick, \"7d0JcqjDGyovxI7QMH5TdPc9RDA=\");","map":{"version":3,"sources":["/Users/aleksandra/Desktop/ergonza/src/utils/useDetectOutsideClick.js"],"names":["useState","useEffect","useDetectOutsideClick","el","initialState","isActive","setIsActive","pageClickEvent","e","current","contains","target","children","window","addEventListener","removeEventListener"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,OAAO,MAAMC,qBAAqB,GAAG,CAACC,EAAD,EAAKC,YAAL,KAAsB;AAAA;;AACzD,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAACI,YAAD,CAAxC;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMM,cAAc,GAAIC,CAAD,IAAO;AAC5B;AACA,UAAIL,EAAE,CAACM,OAAH,KAAe,IAAf,IAAuB,CAACN,EAAE,CAACM,OAAH,CAAWC,QAAX,CAAoBF,CAAC,CAACG,MAAtB,CAA5B,EAA2D;AACzDL,QAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACD;AACF,KALD;;AAOA,QAAGF,EAAE,CAACM,OAAH,CAAWG,QAAd,EAAwB,CACpB;AACH,KAVa,CAWd;;;AACA,QAAIP,QAAJ,EAAc;AACZQ,MAAAA,MAAM,CAACC,gBAAP,CAAwB,OAAxB,EAAiCP,cAAjC;AACD;;AAED,WAAO,MAAM;AACXM,MAAAA,MAAM,CAACE,mBAAP,CAA2B,OAA3B,EAAoCR,cAApC;AACD,KAFD;AAID,GApBQ,EAoBN,CAACF,QAAD,EAAWF,EAAX,CApBM,CAAT;AAqBA,SAAO,CAACE,QAAD,EAAWC,WAAX,CAAP;AACD,CAzBM;;GAAMJ,qB","sourcesContent":["import { useState, useEffect } from 'react';\n\nexport const useDetectOutsideClick = (el, initialState) => {\n  const [isActive, setIsActive] = useState(initialState);\n\n  useEffect(() => {\n    const pageClickEvent = (e) => {\n      // If the active element exists and is clicked outside of\n      if (el.current !== null && !el.current.contains(e.target)) {\n        setIsActive(!isActive);\n      }\n    };\n\n    if(el.current.children) {\n        // setIsActive(!isActive);   \n    }\n    // If the item is active (ie open) then listen for clicks\n    if (isActive) {\n      window.addEventListener('click', pageClickEvent);\n    }\n\n    return () => {\n      window.removeEventListener('click', pageClickEvent);\n    }\n\n  }, [isActive, el]);\n  return [isActive, setIsActive];\n}"]},"metadata":{},"sourceType":"module"}