{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandra/Desktop/ergonza/src/SliderMobile/SliderMobile.js\",\n    _s = $RefreshSig$();\n\n/** @jsxImportSource @emotion/react */\nimport React, { useState } from \"react\";\nimport \"./SliderMobile.scss\";\nimport { useTranslation } from \"react-i18next\";\nimport { useMediaQuery } from \"react-responsive\";\nimport { jsx, css, Global, ClassNames } from \"@emotion/react\";\nimport styled from \"@emotion/styled\";\nimport SliderContent from \"./SliderContent\";\nimport Slide from \"./Slide\";\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"@emotion/react/jsx-dev-runtime\";\nconst slideImages = [require(\"./images/img-1.svg\"), require(\"./images/img-2.svg\"), require(\"./images/img-3.svg\"), require(\"./images/img-4.svg\")].map(m => m.default);\nexport const Slideshow = props => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const [checkboxes, setValues] = useState({\n    0: true,\n    1: false,\n    2: false,\n    3: false\n  });\n\n  const renderCheckbox = i => {\n    return _jsxDEV(_Fragment, {\n      children: _jsxDEV(\"div\", {\n        onClick: () => onCheckboxClick(i),\n        className: \"slider-checkbox \" + (checkboxes[i] ? \"active\" : \"\"),\n        children: _jsxDEV(\"div\", {\n          className: \"slider-checkbox__inner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  };\n\n  const onCheckboxClick = i => {\n    setValues({\n      0: false,\n      1: false,\n      2: false,\n      3: false,\n      ...{\n        [i]: true\n      }\n    });\n  };\n\n  let currImg = Object.keys(checkboxes).find(key => checkboxes[key] === true);\n  return _jsxDEV(\"div\", {\n    className: \"slider-img\",\n    children: [_jsxDEV(\"div\", {\n      className: \"checkboxes-wrapper\",\n      children: [renderCheckbox(0), renderCheckbox(1), renderCheckbox(2), renderCheckbox(3)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), currImg === Number(1)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Slideshow, \"tEdB2hArntU+etB/046DthdJMsU=\", false, function () {\n  return [useTranslation];\n});\n\n_c = Slideshow;\nconst SliderCSS = css`\n  position: relative;\n  height: 320px;\n  width: 375px;\n  margin: 0 auto;\n  overflow: hidden;\n`;\n\nvar _c;\n\n$RefreshReg$(_c, \"Slideshow\");","map":{"version":3,"sources":["/Users/aleksandra/Desktop/ergonza/src/SliderMobile/SliderMobile.js"],"names":["React","useState","useTranslation","useMediaQuery","jsx","css","Global","ClassNames","styled","SliderContent","Slide","slideImages","require","map","m","default","Slideshow","props","t","checkboxes","setValues","renderCheckbox","i","onCheckboxClick","currImg","Object","keys","find","key","Number","SliderCSS"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,qBAAP;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,MAAnB,EAA2BC,UAA3B,QAA6C,gBAA7C;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AAEA,MAAMC,WAAW,GAAG,CAClBC,OAAO,CAAC,oBAAD,CADW,EAElBA,OAAO,CAAC,oBAAD,CAFW,EAGlBA,OAAO,CAAC,oBAAD,CAHW,EAIlBA,OAAO,CAAC,oBAAD,CAJW,EAKlBC,GALkB,CAKbC,CAAD,IAAOA,CAAC,CAACC,OALK,CAApB;AAOA,OAAO,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAClC,QAAM;AAAEC,IAAAA;AAAF,MAAQhB,cAAc,EAA5B;AAEA,QAAM,CAACiB,UAAD,EAAaC,SAAb,IAA0BnB,QAAQ,CAAC;AACvC,OAAG,IADoC;AAEvC,OAAG,KAFoC;AAGvC,OAAG,KAHoC;AAIvC,OAAG;AAJoC,GAAD,CAAxC;;AAOA,QAAMoB,cAAc,GAAIC,CAAD,IAAO;AAC5B,WACE;AAAA,gBACE;AACE,QAAA,OAAO,EAAE,MAAMC,eAAe,CAACD,CAAD,CADhC;AAEE,QAAA,SAAS,EAAE,sBAAsBH,UAAU,CAACG,CAAD,CAAV,GAAgB,QAAhB,GAA2B,EAAjD,CAFb;AAAA,kBAIE;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA;AADF,qBADF;AAUD,GAXD;;AAaA,QAAMC,eAAe,GAAID,CAAD,IAAO;AAC7BF,IAAAA,SAAS,CAAC;AACR,SAAG,KADK;AAER,SAAG,KAFK;AAGR,SAAG,KAHK;AAIR,SAAG,KAJK;AAKR,SAAG;AACD,SAACE,CAAD,GAAK;AADJ;AALK,KAAD,CAAT;AASD,GAVD;;AAYA,MAAIE,OAAO,GAAGC,MAAM,CAACC,IAAP,CAAYP,UAAZ,EAAwBQ,IAAxB,CAA8BC,GAAD,IAAST,UAAU,CAACS,GAAD,CAAV,KAAoB,IAA1D,CAAd;AAEA,SACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,eACE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,iBACGP,cAAc,CAAC,CAAD,CADjB,EAEGA,cAAc,CAAC,CAAD,CAFjB,EAGGA,cAAc,CAAC,CAAD,CAHjB,EAIGA,cAAc,CAAC,CAAD,CAJjB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAOGG,OAAO,KAAKK,MAAM,CAAC,CAAD,CAPrB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAjDM;;GAAMb,S;UACGd,c;;;KADHc,S;AAmDb,MAAMc,SAAS,GAAGzB,GAAI;AACtB;AACA;AACA;AACA;AACA;AACA,CANA","sourcesContent":["/** @jsxImportSource @emotion/react */\nimport React, { useState } from \"react\";\nimport \"./SliderMobile.scss\";\nimport { useTranslation } from \"react-i18next\";\nimport { useMediaQuery } from \"react-responsive\";\nimport { jsx, css, Global, ClassNames } from \"@emotion/react\";\nimport styled from \"@emotion/styled\";\nimport SliderContent from \"./SliderContent\";\nimport Slide from \"./Slide\";\n\nconst slideImages = [\n  require(\"./images/img-1.svg\"),\n  require(\"./images/img-2.svg\"),\n  require(\"./images/img-3.svg\"),\n  require(\"./images/img-4.svg\"),\n].map((m) => m.default);\n\nexport const Slideshow = (props) => {\n  const { t } = useTranslation();\n\n  const [checkboxes, setValues] = useState({\n    0: true,\n    1: false,\n    2: false,\n    3: false,\n  });\n\n  const renderCheckbox = (i) => {\n    return (\n      <>\n        <div\n          onClick={() => onCheckboxClick(i)}\n          className={\"slider-checkbox \" + (checkboxes[i] ? \"active\" : \"\")}\n        >\n          <div className=\"slider-checkbox__inner\"></div>\n        </div>\n      </>\n    );\n  };\n\n  const onCheckboxClick = (i) => {\n    setValues({\n      0: false,\n      1: false,\n      2: false,\n      3: false,\n      ...{\n        [i]: true,\n      },\n    });\n  };\n\n  let currImg = Object.keys(checkboxes).find((key) => checkboxes[key] === true);\n\n  return (\n    <div className=\"slider-img\">\n      <div className=\"checkboxes-wrapper\">\n        {renderCheckbox(0)}\n        {renderCheckbox(1)}\n        {renderCheckbox(2)}\n        {renderCheckbox(3)}\n      </div>\n      {currImg === Number(1)}\n  \n    </div>\n  );\n};\n\nconst SliderCSS = css`\n  position: relative;\n  height: 320px;\n  width: 375px;\n  margin: 0 auto;\n  overflow: hidden;\n`;\n"]},"metadata":{},"sourceType":"module"}