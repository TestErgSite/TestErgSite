{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandra/Desktop/ergonza/src/SliderMobile/SliderMobile.js\",\n    _s = $RefreshSig$();\n\n/** @jsxImportSource @emotion/react */\nimport React, { useState } from \"react\";\nimport \"./SliderMobile.scss\";\nimport { useTranslation } from \"react-i18next\";\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"@emotion/react/jsx-dev-runtime\";\nexport const Slideshow = () => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const [checkboxes, setValues] = useState({\n    0: true,\n    1: false,\n    2: false,\n    3: false\n  });\n\n  const renderCheckbox = i => {\n    return _jsxDEV(_Fragment, {\n      children: _jsxDEV(\"div\", {\n        onClick: () => onCheckboxClick(i),\n        className: \"slider-checkbox \" + (checkboxes[i] ? \"active\" : \"\"),\n        children: _jsxDEV(\"div\", {\n          className: \"slider-checkbox__inner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  };\n\n  const onCheckboxClick = i => {\n    setValues({\n      0: false,\n      1: false,\n      2: false,\n      3: false,\n      ...{\n        [i]: true\n      }\n    });\n  };\n\n  let currImg = Object.keys(checkboxes).find(key => checkboxes[key] === true);\n  return _jsxDEV(\"div\", {\n    className: \"slider-img\",\n    children: [_jsxDEV(\"div\", {\n      className: \"checkboxes-wrapper\",\n      children: [renderCheckbox(0), renderCheckbox(1), renderCheckbox(2), renderCheckbox(3)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), Number(currImg) === 0 ? _jsxDEV(\"div\", {\n      className: \"slide-item-0\",\n      children: _jsxDEV(\"div\", {\n        className: \"slide-item-0-text\",\n        children: t(\"approach-text-item-1\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this) : null, Number(currImg) === 1 ? _jsxDEV(\"div\", {\n      className: \"slide-item-1\",\n      children: _jsxDEV(\"div\", {\n        className: \"slide-item-1-text\",\n        children: t(\"approach-text-item-2\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this) : null, Number(currImg) === 2 ? _jsxDEV(\"div\", {\n      className: \"slide-item-2\",\n      children: _jsxDEV(\"div\", {\n        className: \"slide-item-2-text\",\n        children: t(\"approach-text-item-3\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this) : null, Number(currImg) === 3 ? _jsxDEV(\"div\", {\n      className: \"slide-item-3\",\n      children: _jsxDEV(\"div\", {\n        className: \"slide-item-3-text\",\n        children: t(\"approach-text-item-4\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Slideshow, \"tEdB2hArntU+etB/046DthdJMsU=\", false, function () {\n  return [useTranslation];\n});\n\n_c = Slideshow;\n\nvar _c;\n\n$RefreshReg$(_c, \"Slideshow\");","map":{"version":3,"sources":["/Users/aleksandra/Desktop/ergonza/src/SliderMobile/SliderMobile.js"],"names":["React","useState","useTranslation","Slideshow","t","checkboxes","setValues","renderCheckbox","i","onCheckboxClick","currImg","Object","keys","find","key","Number"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,qBAAP;AACA,SAASC,cAAT,QAA+B,eAA/B;;;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAC7B,QAAM;AAAEC,IAAAA;AAAF,MAAQF,cAAc,EAA5B;AAEA,QAAM,CAACG,UAAD,EAAaC,SAAb,IAA0BL,QAAQ,CAAC;AACvC,OAAG,IADoC;AAEvC,OAAG,KAFoC;AAGvC,OAAG,KAHoC;AAIvC,OAAG;AAJoC,GAAD,CAAxC;;AAOA,QAAMM,cAAc,GAAIC,CAAD,IAAO;AAC5B,WACE;AAAA,gBACE;AACE,QAAA,OAAO,EAAE,MAAMC,eAAe,CAACD,CAAD,CADhC;AAEE,QAAA,SAAS,EAAE,sBAAsBH,UAAU,CAACG,CAAD,CAAV,GAAgB,QAAhB,GAA2B,EAAjD,CAFb;AAAA,kBAIE;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA;AADF,qBADF;AAUD,GAXD;;AAaA,QAAMC,eAAe,GAAID,CAAD,IAAO;AAC7BF,IAAAA,SAAS,CAAC;AACR,SAAG,KADK;AAER,SAAG,KAFK;AAGR,SAAG,KAHK;AAIR,SAAG,KAJK;AAKR,SAAG;AACD,SAACE,CAAD,GAAK;AADJ;AALK,KAAD,CAAT;AASD,GAVD;;AAYA,MAAIE,OAAO,GAAGC,MAAM,CAACC,IAAP,CAAYP,UAAZ,EAAwBQ,IAAxB,CAA8BC,GAAD,IAAST,UAAU,CAACS,GAAD,CAAV,KAAoB,IAA1D,CAAd;AAEA,SACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,eACE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,iBACGP,cAAc,CAAC,CAAD,CADjB,EAEGA,cAAc,CAAC,CAAD,CAFjB,EAGGA,cAAc,CAAC,CAAD,CAHjB,EAIGA,cAAc,CAAC,CAAD,CAJjB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAOGQ,MAAM,CAACL,OAAD,CAAN,KAAoB,CAApB,GACC;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,gBACE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,kBACCN,CAAC,CAAC,sBAAD;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADD,GAMG,IAbN,EAcGW,MAAM,CAACL,OAAD,CAAN,KAAoB,CAApB,GACC;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,gBACE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,kBACCN,CAAC,CAAC,sBAAD;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADD,GAMG,IApBN,EAqBGW,MAAM,CAACL,OAAD,CAAN,KAAoB,CAApB,GACC;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,gBACE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,kBACCN,CAAC,CAAC,sBAAD;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADD,GAMG,IA3BN,EA4BGW,MAAM,CAACL,OAAD,CAAN,KAAoB,CAApB,GACC;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,gBACE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,kBACCN,CAAC,CAAC,sBAAD;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADD,GAMG,IAlCN;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsCD,CA3EM;;GAAMD,S;UACGD,c;;;KADHC,S","sourcesContent":["/** @jsxImportSource @emotion/react */\nimport React, { useState } from \"react\";\nimport \"./SliderMobile.scss\";\nimport { useTranslation } from \"react-i18next\";\n\nexport const Slideshow = () => {\n  const { t } = useTranslation();\n\n  const [checkboxes, setValues] = useState({\n    0: true,\n    1: false,\n    2: false,\n    3: false,\n  });\n\n  const renderCheckbox = (i) => {\n    return (\n      <>\n        <div\n          onClick={() => onCheckboxClick(i)}\n          className={\"slider-checkbox \" + (checkboxes[i] ? \"active\" : \"\")}\n        >\n          <div className=\"slider-checkbox__inner\"></div>\n        </div>\n      </>\n    );\n  };\n\n  const onCheckboxClick = (i) => {\n    setValues({\n      0: false,\n      1: false,\n      2: false,\n      3: false,\n      ...{\n        [i]: true,\n      },\n    });\n  };\n\n  let currImg = Object.keys(checkboxes).find((key) => checkboxes[key] === true);\n\n  return (\n    <div className=\"slider-img\">\n      <div className=\"checkboxes-wrapper\">\n        {renderCheckbox(0)}\n        {renderCheckbox(1)}\n        {renderCheckbox(2)}\n        {renderCheckbox(3)}\n      </div>\n      {Number(currImg) === 0 ? (\n        <div className=\"slide-item-0\">\n          <div className=\"slide-item-0-text\">\n          {t(\"approach-text-item-1\")}\n          </div>\n        </div>\n      ) : null}\n      {Number(currImg) === 1 ? (\n        <div className=\"slide-item-1\">\n          <div className=\"slide-item-1-text\">\n          {t(\"approach-text-item-2\")}\n          </div>\n        </div>\n      ) : null}\n      {Number(currImg) === 2 ? (\n        <div className=\"slide-item-2\">\n          <div className=\"slide-item-2-text\">\n          {t(\"approach-text-item-3\")}\n          </div>\n        </div>\n      ) : null}\n      {Number(currImg) === 3 ? (\n        <div className=\"slide-item-3\">\n          <div className=\"slide-item-3-text\">\n          {t(\"approach-text-item-4\")}\n          </div>\n        </div>\n      ) : null}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}