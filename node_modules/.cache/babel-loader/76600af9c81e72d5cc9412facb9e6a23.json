{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandra/Desktop/ergonza/src/Platform-intro-app/Platform-sidebar/PlatformSidebar.js\";\nimport \"./Sidebar.scss\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class PlatformSidebar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  renderDepartment(departmentsTree) {\n    // departmentsTree = root\n    if (departmentsTree === null) {\n      return;\n    } else {\n      let bossSnippet = null;\n\n      if (departmentsTree.boss) {\n        bossSnippet = /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `boss ${this.props.selectedUser === departmentsTree.boss.username ? \"selected-user\" : \"\"}`,\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: `/org-chart/${departmentsTree.boss.username}`,\n            className: \"link\",\n            children: /*#__PURE__*/_jsxDEV(UserSnippet, {\n              user: departmentsTree.boss\n            }, departmentsTree.boss, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 15\n            }, this)\n          }, departmentsTree.boss.username, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: `/users/${departmentsTree.boss.username}`,\n            className: \"link\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"profile-icon\",\n              \"data-title\": \"\\u041F\\u0435\\u0440\\u0435\\u0439\\u0442\\u0438 \\u043A \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044E\",\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faAddressCard\n              }, uuidv4(), false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 17\n              }, this)\n            }, uuidv4(), false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this)\n          }, departmentsTree.boss.url, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)]\n        }, departmentsTree.boss.url, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this);\n      }\n\n      let children = null;\n\n      if (departmentsTree.children) {\n        children = departmentsTree.children.map(child => {\n          return this.renderDepartment(child);\n        });\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar-department\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"toggle-menu\",\n          onClick: e => this.toggleMenu(departmentsTree.url),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `sidebar-arrow ${this.state.active[departmentsTree.url] ? \"closed\" : \"\"}`\n          }, uuidv4(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `sidebar-department-name ${this.state.active[departmentsTree.url] ? \"\" : \"active-font\"}`,\n            children: departmentsTree.name\n          }, departmentsTree.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)]\n        }, departmentsTree.url, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), this.state.departments[departmentsTree.url] === true ? null : /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [bossSnippet, departmentsTree.users.map((user, inx) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"link-wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: `/org-chart/${user.username}`,\n              className: \"link\",\n              onClick: this.setUnactiveState(),\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `user-snippet-wrapper ${this.props.selectedUser === user.username ? \"selected-user\" : \"\"}`,\n                children: /*#__PURE__*/_jsxDEV(UserSnippet, {\n                  user: user\n                }, user.url, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 23\n                }, this)\n              }, user.url, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 21\n              }, this)\n            }, user.username, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: `/users/${user.username}`,\n              className: \"link\",\n              onClick: this.setUnactiveState(),\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"profile-icon\",\n                \"data-title\": \"\\u041F\\u0435\\u0440\\u0435\\u0439\\u0442\\u0438 \\u043A \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044E\",\n                children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faAddressCard\n                }, inx + user.username, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 23\n                }, this)\n              }, user.username + user.url, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 21\n              }, this)\n            }, user.url + user.username, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 19\n            }, this)]\n          }, uuidv4(), true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }, this)), children]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)]\n      }, uuidv4(), true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n  toggleMenu(url) {\n    let currentVal = this.state.departments[url];\n    let currentState = this.state.active[url];\n    this.setState({\n      active: { ...this.state.active,\n        [url]: !currentState\n      }\n    });\n    this.setState({\n      departments: { ...this.state.departments,\n        [url]: !currentVal\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar-wrapper\",\n      children: this.props.loadingSidebar ? /*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"border\",\n        variant: \"light\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar-company-list\",\n        children: this.renderDepartment(this.props.departmentsTree)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/aleksandra/Desktop/ergonza/src/Platform-intro-app/Platform-sidebar/PlatformSidebar.js"],"names":["React","PlatformSidebar","Component","constructor","props","state","renderDepartment","departmentsTree","bossSnippet","boss","selectedUser","username","faAddressCard","uuidv4","url","children","map","child","e","toggleMenu","active","name","departments","users","user","inx","setUnactiveState","currentVal","currentState","setState","render","loadingSidebar"],"mappings":"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","sourcesContent":["import \"./Sidebar.scss\";\nimport React from \"react\";\n\nexport class PlatformSidebar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n  }\n\n  renderDepartment(departmentsTree) {\n    // departmentsTree = root\n    if (departmentsTree === null) {\n      return;\n    } else {\n      let bossSnippet = null;\n      if (departmentsTree.boss) {\n        bossSnippet = (\n          <div\n            className={`boss ${\n              this.props.selectedUser === departmentsTree.boss.username\n                ? \"selected-user\"\n                : \"\"\n            }`}\n            key={departmentsTree.boss.url}\n          >\n            <Link\n              to={`/org-chart/${departmentsTree.boss.username}`}\n              className=\"link\"\n              key={departmentsTree.boss.username}\n            >\n              <UserSnippet\n                user={departmentsTree.boss}\n                key={departmentsTree.boss}\n              />\n            </Link>\n            <Link\n              to={`/users/${departmentsTree.boss.username}`}\n              className=\"link\"\n              key={departmentsTree.boss.url}\n            >\n              <div className=\"profile-icon\" data-title=\"Перейти к профилю\" key={uuidv4()}>\n                <FontAwesomeIcon icon={faAddressCard} key={uuidv4()}/>\n              </div>\n            </Link>\n          </div>\n        );\n      }\n\n      let children = null;\n      if (departmentsTree.children) {\n        children = departmentsTree.children.map((child) => {\n          return this.renderDepartment(child);\n        });\n      }\n      return (\n        <div className=\"sidebar-department\" key={uuidv4()}>\n          <div\n            key={departmentsTree.url}\n            className=\"toggle-menu\"\n            onClick={(e) => this.toggleMenu(departmentsTree.url)}\n          >\n            <div\n              key={uuidv4()}\n              className={`sidebar-arrow ${\n                this.state.active[departmentsTree.url] ? \"closed\" : \"\"\n              }`}\n            ></div>\n            <div\n              className={`sidebar-department-name ${\n                this.state.active[departmentsTree.url] ? \"\" : \"active-font\"\n              }`}\n              key={departmentsTree.name}\n            >\n              {departmentsTree.name}\n            </div>\n          </div>\n          {this.state.departments[departmentsTree.url] === true ? null : (\n            <React.Fragment>\n              {bossSnippet}\n              {departmentsTree.users.map((user, inx) => (\n                <div className=\"link-wrapper\" key={uuidv4()}>\n                  <Link\n                    to={`/org-chart/${user.username}`}\n                    className=\"link\"\n                    key={user.username}\n                    onClick={this.setUnactiveState()}\n                  >\n                    <div\n                      className={`user-snippet-wrapper ${\n                        this.props.selectedUser === user.username\n                          ? \"selected-user\"\n                          : \"\"\n                      }`}\n                      key={user.url}\n                    >\n                      <UserSnippet user={user} key={user.url} />\n                    </div>\n                  </Link>\n\n                  <Link\n                    to={`/users/${user.username}`}\n                    className=\"link\"\n                    key={user.url + user.username}\n                    onClick={this.setUnactiveState()}\n                  >\n                    <div\n                      className=\"profile-icon\"\n                      data-title=\"Перейти к профилю\"\n                      key={user.username + user.url}\n                    >\n                      <FontAwesomeIcon\n                        icon={faAddressCard}\n                        key={inx + user.username}\n                      />\n                    </div>\n                  </Link>\n                </div>\n              ))}\n              {children}\n            </React.Fragment>\n          )}\n        </div>\n      );\n    }\n  }\n\n  toggleMenu(url) {\n    let currentVal = this.state.departments[url];\n    let currentState = this.state.active[url];\n\n    this.setState({\n      active: {\n        ...this.state.active,\n        [url]: !currentState,\n      },\n    });\n\n    this.setState({\n      departments: {\n        ...this.state.departments,\n        [url]: !currentVal,\n      },\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"sidebar-wrapper\">\n        {this.props.loadingSidebar ? (\n          <Spinner animation=\"border\" variant=\"light\" />\n        ) : (\n          <div className=\"sidebar-company-list\">\n            {this.renderDepartment(this.props.departmentsTree)}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}