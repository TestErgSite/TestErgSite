{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandra/Desktop/ergonza/src/SliderMobile/SliderMobile.js\",\n    _s2 = $RefreshSig$();\n\n/** @jsxImportSource @emotion/react */\nimport React, { useState } from \"react\";\nimport \"./SliderMobile.scss\";\nimport { useTranslation } from \"react-i18next\";\nimport { useMediaQuery } from \"react-responsive\";\nimport { jsx, css, Global, ClassNames } from \"@emotion/react\";\nimport styled from \"@emotion/styled\";\nimport SliderContent from './SliderContent';\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nconst slideImages = [require(\"./images/img-2.svg\")].map(m => m.default);\nexport const Slideshow = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const {\n    t\n  } = useTranslation();\n\n  const MobileSlider = ({\n    children\n  }) => {\n    _s();\n\n    const isMobile = useMediaQuery({\n      maxWidth: 375\n    });\n    return isMobile ? children : null;\n  };\n\n  _s(MobileSlider, \"7khsyUHgctuHIPa2/KlDS6LcnT0=\", false, function () {\n    return [useMediaQuery];\n  });\n\n  const getWidth = () => window.innerWidth;\n\n  const [state, setState] = useState({\n    translate: 0,\n    transition: 0.45\n  });\n  const {\n    translate,\n    transition\n  } = state;\n  return _jsxDEV(MobileSlider, {\n    children: _jsxDEV(\"div\", {\n      css: SliderCSS\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(Slideshow, \"dMzN2Fj856lNYQV2m8VcxxM0+y4=\", false, function () {\n  return [useTranslation];\n});\n\n_c = Slideshow;\nconst SliderCSS = css`\n  position: relative;\n  height: 100vh;\n  width: 100vw;\n  margin: 0 auto;\n  overflow: hidden;\n`;\n\nvar _c;\n\n$RefreshReg$(_c, \"Slideshow\");","map":{"version":3,"sources":["/Users/aleksandra/Desktop/ergonza/src/SliderMobile/SliderMobile.js"],"names":["React","useState","useTranslation","useMediaQuery","jsx","css","Global","ClassNames","styled","SliderContent","slideImages","require","map","m","default","Slideshow","t","MobileSlider","children","isMobile","maxWidth","getWidth","window","innerWidth","state","setState","translate","transition","SliderCSS"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,qBAAP;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,MAAnB,EAA2BC,UAA3B,QAA6C,gBAA7C;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAGA,MAAMC,WAAW,GAAG,CAChBC,OAAO,CAAC,oBAAD,CADS,EAElBC,GAFkB,CAEdC,CAAC,IAAIA,CAAC,CAACC,OAFO,CAApB;AAIA,OAAO,MAAOC,SAAS,GAAG,MAAM;AAAA;;AAAA;;AAC9B,QAAM;AAAEC,IAAAA;AAAF,MAAQd,cAAc,EAA5B;;AAGA,QAAMe,YAAY,GAAG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAkB;AAAA;;AACrC,UAAMC,QAAQ,GAAGhB,aAAa,CAAC;AAAEiB,MAAAA,QAAQ,EAAE;AAAZ,KAAD,CAA9B;AACA,WAAOD,QAAQ,GAAGD,QAAH,GAAc,IAA7B;AACD,GAHD;;AAJ8B,KAIxBD,YAJwB;AAAA,YAKXd,aALW;AAAA;;AAS9B,QAAMkB,QAAQ,GAAG,MAAMC,MAAM,CAACC,UAA9B;;AAEA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBxB,QAAQ,CAAC;AACjCyB,IAAAA,SAAS,EAAE,CADsB;AAEjCC,IAAAA,UAAU,EAAE;AAFqB,GAAD,CAAlC;AAKA,QAAM;AAAED,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAA4BH,KAAlC;AAGA,SACE,QAAC,YAAD;AAAA,cACA;AAAK,MAAA,GAAG,EAAEI;AAAV;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CA1BM;;IAAOb,S;UACEb,c;;;KADFa,S;AA6Bd,MAAMa,SAAS,GAAGvB,GAAI;AACtB;AACA;AACA;AACA;AACA;AACA,CANA","sourcesContent":["/** @jsxImportSource @emotion/react */\nimport React, { useState } from \"react\";\nimport \"./SliderMobile.scss\";\nimport { useTranslation } from \"react-i18next\";\nimport { useMediaQuery } from \"react-responsive\";\nimport { jsx, css, Global, ClassNames } from \"@emotion/react\";\nimport styled from \"@emotion/styled\";\nimport SliderContent from './SliderContent'\n\n\nconst slideImages = [\n    require(\"./images/img-2.svg\"),\n].map(m => m.default);\n\nexport const  Slideshow = () => {\n  const { t } = useTranslation();\n\n\n  const MobileSlider = ({ children }) => {\n    const isMobile = useMediaQuery({ maxWidth: 375 });\n    return isMobile ? children : null;\n  };\n\n  const getWidth = () => window.innerWidth\n\n  const [state, setState] = useState({\n    translate: 0,\n    transition: 0.45\n  })\n\n  const { translate, transition } = state\n\n\n  return (\n    <MobileSlider>\n    <div css={SliderCSS}>{/*  */}</div>\n    \n    \n    </MobileSlider>\n  );\n};\n\n\nconst SliderCSS = css`\n  position: relative;\n  height: 100vh;\n  width: 100vw;\n  margin: 0 auto;\n  overflow: hidden;\n`"]},"metadata":{},"sourceType":"module"}