{"ast":null,"code":"import _slicedToArray from\"/Users/aleksandra/Desktop/ergonza/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect}from'react';export var useDetectOutsideClick=function useDetectOutsideClick(el,initialState){var _useState=useState(initialState),_useState2=_slicedToArray(_useState,2),isActive=_useState2[0],setIsActive=_useState2[1];useEffect(function(){var pageClickEvent=function pageClickEvent(e){// If the active element exists and is clicked outside of\nif(el.current!==null&&!el.current.contains(e.target)){setIsActive(!isActive);}// If the active element exists and is clicked on dropdown item\n// if(el.current.children) {\n//   setIsActive(!isActive);\n// }\n};// If the item is active (ie open) then listen for clicks\nif(isActive){window.addEventListener('click',pageClickEvent);}return function(){window.removeEventListener('click',pageClickEvent);};},[isActive,el]);return[isActive,setIsActive];};","map":{"version":3,"sources":["/Users/aleksandra/Desktop/ergonza/src/utils/useDetectOutsideClick.js"],"names":["useState","useEffect","useDetectOutsideClick","el","initialState","isActive","setIsActive","pageClickEvent","e","current","contains","target","window","addEventListener","removeEventListener"],"mappings":"wJAAA,OAASA,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CAEA,MAAO,IAAMC,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,CAACC,EAAD,CAAKC,YAAL,CAAsB,eACzBJ,QAAQ,CAACI,YAAD,CADiB,wCAClDC,QADkD,eACxCC,WADwC,eAGzDL,SAAS,CAAC,UAAM,CACd,GAAMM,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,CAAD,CAAO,CAC5B;AACA,GAAIL,EAAE,CAACM,OAAH,GAAe,IAAf,EAAuB,CAACN,EAAE,CAACM,OAAH,CAAWC,QAAX,CAAoBF,CAAC,CAACG,MAAtB,CAA5B,CAA2D,CACzDL,WAAW,CAAC,CAACD,QAAF,CAAX,CACD,CACA;AACD;AACA;AACA;AACD,CATD,CAWA;AACA,GAAIA,QAAJ,CAAc,CACZO,MAAM,CAACC,gBAAP,CAAwB,OAAxB,CAAiCN,cAAjC,EACD,CAED,MAAO,WAAM,CACXK,MAAM,CAACE,mBAAP,CAA2B,OAA3B,CAAoCP,cAApC,EACD,CAFD,CAID,CArBQ,CAqBN,CAACF,QAAD,CAAWF,EAAX,CArBM,CAAT,CAsBA,MAAO,CAACE,QAAD,CAAWC,WAAX,CAAP,CACD,CA1BM","sourcesContent":["import { useState, useEffect } from 'react';\n\nexport const useDetectOutsideClick = (el, initialState) => {\n  const [isActive, setIsActive] = useState(initialState);\n\n  useEffect(() => {\n    const pageClickEvent = (e) => {\n      // If the active element exists and is clicked outside of\n      if (el.current !== null && !el.current.contains(e.target)) {\n        setIsActive(!isActive);\n      }\n       // If the active element exists and is clicked on dropdown item\n      // if(el.current.children) {\n      //   setIsActive(!isActive);\n      // }\n    };\n\n    // If the item is active (ie open) then listen for clicks\n    if (isActive) {\n      window.addEventListener('click', pageClickEvent);\n    }\n\n    return () => {\n      window.removeEventListener('click', pageClickEvent);\n    }\n\n  }, [isActive, el]);\n  return [isActive, setIsActive];\n}"]},"metadata":{},"sourceType":"module"}