{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandra/Desktop/ergonza/src/SliderMobile/SliderMobile.js\",\n    _s = $RefreshSig$();\n\n/** @jsxImportSource @emotion/react */\nimport React, { useState } from \"react\";\nimport \"./SliderMobile.scss\";\nimport { useTranslation } from \"react-i18next\";\nimport { useMediaQuery } from \"react-responsive\";\nimport { jsx, css, Global, ClassNames } from \"@emotion/react\";\nimport styled from \"@emotion/styled\";\nimport SliderContent from \"./SliderContent\";\nimport Slide from \"./Slide\";\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"@emotion/react/jsx-dev-runtime\";\nconst slideImages = [require(\"./images/img-1.svg\"), require(\"./images/img-2.svg\"), require(\"./images/img-3.svg\"), require(\"./images/img-4.svg\")].map(m => m.default);\nexport const Slideshow = props => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const width = 375;\n  const [state, setState] = useState({\n    translate: 0,\n    transition: 0.45\n  });\n  const [checkboxes, setValues] = useState({\n    1: true,\n    2: false,\n    3: false,\n    4: false\n  });\n\n  const renderCheckbox = i => {\n    return _jsxDEV(_Fragment, {\n      children: [_jsxDEV(\"div\", {\n        onClick: () => onCheckboxClick(i),\n        className: \"how-it-works-checkbox \" + (checkboxes[i] ? \"active\" : \"\"),\n        children: _jsxDEV(\"div\", {\n          className: \"how-it-works-checkbox__inner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), _jsxDEV(\"div\", {\n        className: `how-it-works-checkbox-num-mobile num-${i}-mobile ` + (checkboxes[i] ? \"active\" : \"\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  };\n\n  const onCheckboxClick = i => {\n    setValues({\n      1: false,\n      2: false,\n      3: false,\n      4: false,\n      ...{\n        [i]: true\n      }\n    });\n  };\n\n  const {\n    translate,\n    transition\n  } = state;\n  return _jsxDEV(\"div\", {\n    css: SliderCSS,\n    children: [_jsxDEV(\"div\", {\n      className: \"checkboxes\",\n      children: [renderCheckbox(1), renderCheckbox(2), renderCheckbox(3), renderCheckbox(4)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), _jsxDEV(SliderContent, {\n      translate: translate,\n      transition: transition,\n      width: width * slideImages.length,\n      children: slideImages.map((slide, i) => _jsxDEV(Slide, {\n        content: slide\n      }, slide + i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Slideshow, \"530sm7wWWZHbFIaB89Aphxc51fU=\", false, function () {\n  return [useTranslation];\n});\n\n_c = Slideshow;\nconst SliderCSS = css`\n  position: relative;\n  height: 320px;\n  width: 375px;\n  margin: 0 auto;\n  overflow: hidden;\n`;\n\nvar _c;\n\n$RefreshReg$(_c, \"Slideshow\");","map":{"version":3,"sources":["/Users/aleksandra/Desktop/ergonza/src/SliderMobile/SliderMobile.js"],"names":["React","useState","useTranslation","useMediaQuery","jsx","css","Global","ClassNames","styled","SliderContent","Slide","slideImages","require","map","m","default","Slideshow","props","t","width","state","setState","translate","transition","checkboxes","setValues","renderCheckbox","i","onCheckboxClick","SliderCSS","length","slide"],"mappings":"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","sourcesContent":["/** @jsxImportSource @emotion/react */\nimport React, { useState } from \"react\";\nimport \"./SliderMobile.scss\";\nimport { useTranslation } from \"react-i18next\";\nimport { useMediaQuery } from \"react-responsive\";\nimport { jsx, css, Global, ClassNames } from \"@emotion/react\";\nimport styled from \"@emotion/styled\";\nimport SliderContent from \"./SliderContent\";\nimport Slide from \"./Slide\";\n\nconst slideImages = [\n  require(\"./images/img-1.svg\"),\n  require(\"./images/img-2.svg\"),\n  require(\"./images/img-3.svg\"),\n  require(\"./images/img-4.svg\"),\n].map((m) => m.default);\n\nexport const Slideshow = (props) => {\n  const { t } = useTranslation();\n\n  const width = 375;\n\n  const [state, setState] = useState({\n    translate: 0,\n    transition: 0.45,\n  });\n\n  const [checkboxes, setValues] = useState({\n    1: true,\n    2: false,\n    3: false,\n    4: false,\n  });\n\n  const renderCheckbox = (i) => {\n    return (\n      <>\n        <div\n          onClick={() => onCheckboxClick(i)}\n          className={\"how-it-works-checkbox \" + (checkboxes[i] ? \"active\" : \"\")}\n        >\n          <div className=\"how-it-works-checkbox__inner\"></div>\n        </div>\n        <div\n          className={\n            `how-it-works-checkbox-num-mobile num-${i}-mobile ` +\n            (checkboxes[i] ? \"active\" : \"\")\n          }\n        ></div>\n      </>\n    );\n  };\n\n  const onCheckboxClick = (i) => {\n    setValues({\n      1: false,\n      2: false,\n      3: false,\n      4: false,\n      ...{\n        [i]: true,\n      },\n    });\n  };\n\n  const { translate, transition } = state;\n\n  return (\n    <div css={SliderCSS}>\n      <div className=\"checkboxes\">\n        {renderCheckbox(1)}\n        {renderCheckbox(2)}\n        {renderCheckbox(3)}\n        {renderCheckbox(4)}\n      </div>\n      <SliderContent\n        translate={translate}\n        transition={transition}\n        width={width * slideImages.length}\n      >\n        {slideImages.map((slide, i) => (\n          <Slide key={slide + i} content={slide} />\n        ))}\n      </SliderContent>\n    </div>\n  );\n};\n\nconst SliderCSS = css`\n  position: relative;\n  height: 320px;\n  width: 375px;\n  margin: 0 auto;\n  overflow: hidden;\n`;\n"]},"metadata":{},"sourceType":"module"}